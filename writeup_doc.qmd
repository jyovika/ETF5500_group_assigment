---
title: "ETF5500 Group Assignment Submission"
format: pdf
author: Girika, Jyovika Aswale, Richa Anghan, Sia Chawla, Siddhi Ajit Jadhav
---

## Common Factors in NYSE Stock Returns (2005–2019): PCA and Factor Analysis with Industry Insights

### Executive Summary 

We analyze monthly returns for 91 NYSE-listed stocks (January 2005–December 2019) along with the S&P 500 market return. Principal Component Analysis (PCA) and Factor Analysis (FA) both reveal that the first latent dimension represents a broad **market factor**. After orienting the sign, the first principal component correlates strongly with the market return (≈ +0.95).

Industry-level patterns are pronounced. **Finance, Insurance, and Real Estate (H)** and **Construction (C)** show the largest absolute loadings on the first factor, while **Retail (G)** and **Services (I)** load more weakly. Factor Analysis confirms that Finance has the lowest mean uniqueness (\~0.47), indicating a higher proportion of systematic (non-diversifiable) variance, whereas Retail and Services are primarily driven by idiosyncratic risk.

For investors seeking exposure aligned with overall market movements, Finance-sector stocks are most suitable. We specifically recommend **H88608, H90004, H89994, H88291, and H83218**. A complementary clustering analysis at the industry level provides further support for these findings.

### Data and Preparation 

We analyze *SampleK.csv* (91 stocks, labeled by industry + PERMNO) and *Market.csv* (S&P 500 returns). Dates were aligned to monthly frequency, with no missing data. Returns were standardized for comparability. Exploratory summaries and correlations showed strong cross-stock dependence, supporting the use of dimension reduction.

### Methods 

1. **Principal Component Analysis (PCA)**

PCA was applied to the standardized stock return matrix to identify latent components. Both the scree plot and the Kaiser criterion were examined. Setting a lower bound for uniqueness at 0.05, the Kaiser rule also suggested retaining two components, consistent with the scree plot, as capturing meaningful common variation. PC1 was oriented to correlate positively with the market return, and industry-average loadings were computed to compare sector exposures.

2. **Factor Analysis (FA)**\
FA was estimated via maximum likelihood with varimax rotation, guided by PCA and model fit. A uniqueness bound of 0.05 ensured convergence. Industry averages of loadings and uniqueness distinguished systematic from idiosyncratic risk.

3. **Stock Selection**\
Stocks were ranked by PC1 loading magnitude and market correlation. The top five stocks were chosen as most sensitive to market movements.

### Results 

1.The **first principal component (PC1)** is **highly aligned with the S&P500 market return**, with a **correlation of 0.95**. This means that **around 90% of the variation in PC1 can be explained by market movements**. The **scatterplot of PC1 scores against market returns** shows a **clear positive linear relationship**, confirming that **PC1 effectively represents the market factor**. Industries such as **Finance** and **Construction** load most strongly on **PC1**, reflecting their **high systematic exposure**, while sectors like **Retail** and **Services** retain **higher uniqueness**, indicating a **larger idiosyncratic component**.

![](Image5.jpg){fig-align="center" width=60%}


2. **Construction (C)** exhibits the **highest loading on the first latent factor**, demonstrating that it is the industry most sensitive to **broad market-wide variation**, with **Finance, Insurance and Real Estate (H)** and **Transportation (E)** also showing substantial exposure. However, the analysis shifts when examining the **second latent factor**, where **Finance, Insurance and Real Estate (H)** records the **strongest loading**, followed by **Wholesale Trade (F)** and **Mining (B)**. This indicates that while **Construction dominates the primary, market-like factor**, **Finance is the key driver of the secondary dimension of systematic variation**, likely reflecting **credit- or sector-specific financial influences** distinct from the **general market**. **This highlights the importance of considering multiple latent factors in factor analysis**, as **different industries emerge as dominant depending on the dimension of systematic variation under review.**

![](Image1.png){fig-align="center" width=50%}

3. From the factor loadings, it is evident that **all industry groups have positive loadings on the first latent factor**, meaning they generally **move in the same direction as the dominant market factor**, with **Construction (C)** and **Finance, Insurance and Real Estate (H)** showing particularly strong alignment. On the **second factor**, however, there is more variation: while **Finance (H)**, **Wholesale Trade (F)**, and **Mining (B)** load positively, some industries such as **Retail (G)** and **Services (I)** have relatively **small or weaker loadings**, suggesting **lower sensitivity or idiosyncratic movement**. Overall, the **heterogeneity across industry groups** indicates that while most sectors are jointly exposed to **broad market forces**, **certain industries retain more unique or sector-specific risk components**, highlighting the importance of considering **multiple factors** to capture differences in **systematic versus idiosyncratic variation**.

4. From the uniqueness results, **Finance, Insurance and Real Estate (H)** shows the **lowest mean (0.51) and median (0.46) uniqueness**, indicating that a larger portion of its variation is explained by common factors rather than idiosyncratic risk. This implies that **Finance is the industry most exposed to systematic risk**, as its returns move more closely with market-wide influences that cannot be diversified away. By contrast, industries such as **Manufacturing (D)**, **Retail (G)**, and **Services (I)** display the **highest uniqueness values (above 0.82)**, suggesting that their variation is more idiosyncratic and less tied to systematic market factors. Overall, the results highlight that **systematic risk is concentrated in the Finance sector**, while other industries retain a greater degree of diversifiable, industry-specific variation.

![](Image2.png){fig-align="center" width=50%}

5. If the investor’s goal is to hold stocks that **move closely with the market**, the selection should be based on **high correlations with the market (cor_Market)** and **large PC1 loadings**, since PC1 effectively represents the market factor. Among the available stocks in **Finance, Insurance and Real Estate (H)**, the five strongest candidates are:

![](Image3.png){fig-align="center" width=50%}
These stocks show the **highest alignment with the market factor**, making them the most suitable for an investor seeking exposure to systematic risk. Notably, **H90004** and **H88608** stand out as the strongest choices, given their combination of **high factor loadings** and **very strong correlation with market returns**.

6. The biplot of industry-average factor loadings highlights clear differences in systematic exposure across sectors. **Construction (C)** has the strongest loading on **Factor 1**, indicating it is most sensitive to broad market-wide movements. In contrast, **Finance, Insurance and Real Estate (H)** shows the highest loading on **Factor 2**, suggesting it is driven by an additional source of systematic variation, likely tied to financial or credit-related shocks. **Wholesale Trade (F)** and **Mining (B)** also load relatively strongly on Factor 2, whereas **Services (I)** and **Manufacturing (D)** exhibit weaker secondary loadings, reflecting greater idiosyncratic components. The **closeness of vectors** for some industries, such as **Construction (C) and Transportation (E)**, indicates similar response patterns to the latent factors. Overall, the plot shows that while all industries move broadly with the market (positive loadings), **heterogeneity in factor exposures** reveals that different sectors are influenced to varying degrees by market-wide versus sector-specific dynamics.

![](Image4.jpg){fig-align="center" width=60%}

## References

1. Date formating using zoo in R. (2017, January). [Online post]. <https://stackoverflow.com/questions/41588737/date-formating-using-zoo-in-r?rq=3>

2. Principal component analysis in R. (2012, May). [Online post]. <https://stats.stackexchange.com/questions/28996/principal-component-analysis-in-r>

3. Performing Analysis of a Factor in R Programming—Factanal(). GeeksforGeeks. <https://www.geeksforgeeks.org/r-language/performing-analysis-of-a-factor-in-r-programming-factanal-function/>

4. Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn
  M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D,
  Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” _Journal of Open Source Software_, *4*(43),
  1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
  
5. Zeileis A, Grothendieck G (2005). “zoo: S3 Infrastructure for Regular and Irregular Time Series.” _Journal of
  Statistical Software_, *14*(6), 1-27. doi:10.18637/jss.v014.i06 <https://doi.org/10.18637/jss.v014.i06>.
  
6. Robinson D, Hayes A, Couch S (2024). _broom: Convert Statistical Objects into Tidy Tibbles_. R package
  version 1.0.6, <https://CRAN.R-project.org/package=broom>.
  
7. Zhu H (2024). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. R package version 1.4.0,
  <https://CRAN.R-project.org/package=kableExtra>.
  
8. Xie Y (2025). _knitr: A General-Purpose Package for Dynamic Report Generation in R_. R package version 1.50,
  <https://yihui.org/knitr/>.

9. Yihui Xie (2015) Dynamic Documents with R and knitr. 2nd edition. Chapman and Hall/CRC. ISBN 978-1498716963

10. Yihui Xie (2014) knitr: A Comprehensive Tool for Reproducible Research in R. In Victoria Stodden, Friedrich
  Leisch and Roger D. Peng, editors, Implementing Reproducible Computational Research. Chapman and Hall/CRC.
  ISBN 978-1466561595



## Appendix - 
```{r, message=FALSE}
library(tidyverse)
library(zoo)
library(broom)
library(kableExtra)
library(knitr)
```

```{r}
market_df <- read.csv(here::here("data/Market.csv"))
sample_df <- read.csv(here::here("data/SampleK.csv"))
```

```{r, IDA, results='hide', echo=FALSE}
colSums(is.na(sample_df))

range(sample_df$Date)

tibble(stock = names(sample_df)[-1]) %>%
  mutate(industry = substr(stock,1,1)) %>%
  count(industry)
```

### Cleaning 
```{r, CLeaning}
sample_df <- sample_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))

market_df <- market_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))
  
```

### EDA

```{r, EDA }

industry_cols <- c(
  "Mining"               = "#65524d",
  "Construction"         = "#36827F",
  "Manufacturing"        = "#7fc29b",
  "Transport & Utilities"= "#b5ef8a",
  "Wholesale Trade"      = "#d7f171",
  "Retail Trade"         = "#aec3b0",
  "Finance/Insurance/RE" = "#82D4BB",
  "Services"             = "#3a405a")

stocks_long <- sample_df %>%
  pivot_longer(-Date, names_to = "stock", values_to = "ret") %>%
  mutate(industry = substr(stock,1,1),
         industry_name = recode(industry,
           B = "Mining",
           C = "Construction",
           D = "Manufacturing",
           E = "Transport & Utilities",
           F = "Wholesale Trade",
           G = "Retail Trade",
           H = "Finance/Insurance/RE",
           I = "Services"))

ggplot(stocks_long %>%
         group_by(industry_name) %>%
         summarise(mean_return = mean(ret, na.rm = TRUE),
                   .groups = "drop"),
       aes(x = reorder(industry_name, mean_return),
           y = mean_return,
           fill = industry_name)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = industry_cols) +
  labs(title = "Average Monthly Return by Industry",
       x = "Industry", y = "Mean Return") +
  theme_minimal() +
  theme(legend.position = "none")

sampleXmarket <- stocks_long %>%
  left_join(market_df, by = "Date")

industry_ts <- sampleXmarket %>%
  group_by(Date, industry_name) %>%
  summarise(
    avg_ret = mean(ret, na.rm = TRUE),
    MarketReturn = first(MarketReturn),  
    .groups = "drop"
  )

ggplot(industry_ts, aes(x = MarketReturn, y = avg_ret, color = industry_name)) +
  geom_point(alpha = 0.5) +
  geom_smooth(se = FALSE) +
  scale_color_manual(values = industry_cols) +
  facet_wrap(~ industry_name, scales = "fixed") +
  labs(
    title = "Industry Average Returns vs Market Return",
    x = "Market Return",
    y = "Industry Avg Return"
  ) +
  theme_minimal() +
  theme(legend.position = "none")
```

### PCA, question 1

```{r}
pca_out <- prcomp(sample_df[,-1], scale. = TRUE, center = TRUE)
plot(pca_out, type = "line")
```

```{r, results='hide'}
summary(pca_out)
```

```{r}
pc1_ts <- pca_out$x[,1]
if (cor(pc1_ts, market_df$MarketReturn) < 0) {
  pc1_ts <- -pc1_ts
  pca_out$rotation[,1] <- -pca_out$rotation[,1]
}

pca_vs_market <- tibble(
  Date = sample_df$Date,
  PC1 = pc1_ts
) %>%
  left_join(market_df, by = "Date")

cor(pca_vs_market$PC1, pca_vs_market$MarketReturn, use = "pairwise.complete.obs")

ggplot(pca_vs_market, aes(x = MarketReturn, y = PC1)) +
  geom_point(alpha = 0.6, color = industry_cols["Finance/Insurance/RE"]) +
  geom_smooth(method = "lm", se = FALSE, color = industry_cols["Mining"]) +
  labs(
    title = "PC1 vs Market Return",
    x = "Market Return",
    y = "PC1 Score"
  ) +
  theme_minimal()
```

### Question 2
```{r}
fact_out <- factanal(sample_df[,-1], factors = 2, rotation = "varimax", scores = "regression")

loadings_df <- as.data.frame(unclass(fact_out$loadings))
loadings_df$stock <- rownames(loadings_df)
loadings_df$industry <- substr(loadings_df$stock, 1, 1)

industry_factor <- loadings_df %>%
  group_by(industry) %>%
  summarise(
    mean_F1 = mean(Factor1, na.rm = TRUE),
    mean_F2 = mean(Factor2, na.rm = TRUE))
```
to compare what happens when we use 3 factors - 
```{r}
fact_out_2 <- factanal(sample_df[,-1], factors = 3, rotation = "varimax", scores = "regression")

loadings_df2 <- as.data.frame(unclass(fact_out_2$loadings))
loadings_df2$stock <- rownames(loadings_df2)
loadings_df2$industry <- substr(loadings_df2$stock, 1, 1)

industry_factor2 <- loadings_df2 %>%
  group_by(industry) %>%
  summarise(
    mean_F1 = mean(Factor1, na.rm = TRUE),
    mean_F2 = mean(Factor2, na.rm = TRUE),
    mean_F3 = mean(Factor3, na.rm = TRUE))
```
plot - 
```{r}
factor_scores <- as.data.frame(fact_out$scores)
factor_scores$Date <- sample_df$Date

industry_plot <- industry_factor %>%
  rename(fl1 = mean_F1, fl2 = mean_F2)

ggplot(industry_plot, aes(x = fl1, y = fl2, label = industry)) +
  geom_segment(aes(xend = fl1, yend = fl2, x = 0, y = 0),
               arrow = arrow(length = unit(0.15, "cm"))) +
  geom_text(color = industry_cols["Construction"], nudge_y = -0.02, size = 4) +
  labs(x = "Factor 1 loading (mean by industry)",
       y = "Factor 2 loading (mean by industry)",
       title = "Factor loadings (industry averages)") +
  coord_equal() +
  theme_minimal()


```

### Question 4 
```{r,eval=FALSE}
uniq <- fact_out$uniquenesses
fa_tbl <- tibble(StockID = names(uniq),
                 uniqueness = as.numeric(uniq),
                 Industry = substr(StockID, 1, 1))


fa_tbl %>%
  mutate(industry_name = recode(Industry,
    B = "Mining",
    C = "Construction",
    D = "Manufacturing",
    E = "Transport & Utilities",
    F = "Wholesale Trade",
    G = "Retail Trade",
    H = "Finance/Insurance/RE",
    I = "Services"
  )) %>%
  mutate(Industry = paste(Industry, "-", industry_name)) %>%
  group_by(Industry) %>%
  summarise(
    `Mean uniqueness`   = mean(uniqueness, na.rm = TRUE),
    `Median uniqueness` = median(uniqueness, na.rm = TRUE),
    .groups = "drop"
  ) %>% 
  arrange(`Mean uniqueness`) %>%
  kbl(
    caption = "Industry-level Uniqueness (Mean and Median)",
    digits = 3,
    align = c("l","r","r")
  ) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed", "responsive"),
    full_width = FALSE
  ) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#3a405a") %>%
  column_spec(1, bold = TRUE)
```

### Question 5
```{r,eval=FALSE}
cor_with_mkt <- map_dbl(sample_df[,-1], ~ cor(.x, market_df$MarketReturn))
corr_tbl <- tibble(StockID = names(cor_with_mkt), cor_Market = cor_with_mkt)

load_mat <- as_tibble(pca_out$rotation, rownames = "StockID")
load_long <- load_mat |>
  mutate(Industry = substr(StockID, 1, 1)) |>
  select(StockID, Industry, PC1 = PC1, PC2 = PC2)

load_long |>
  group_by(Industry) |>
  summarise(
    mean_PC1 = mean(PC1),
    mean_abs_PC1 = mean(abs(PC1)),
    mean_PC2 = mean(PC2),
    mean_abs_PC2 = mean(abs(PC2)),
    .groups = "drop"
) |> arrange(desc(mean_abs_PC1))

pick_tbl <- load_long |>
  select(StockID, Industry, PC1) |>
  inner_join(corr_tbl, by = "StockID") |>
  mutate(abs_PC1 = abs(PC1)) |>
  arrange(desc(abs_PC1), desc(cor_Market))

head(pick_tbl, 5) %>%
  kbl(
    caption = "Top 5 Stocks by Absolute PC1 Loading and Market Correlation",
    digits = 3,
    align = c("l","l","r","r","r")
  ) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed", "responsive"),
    full_width = FALSE
  ) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#3a405a") %>%
  column_spec(1, bold = TRUE)
```

