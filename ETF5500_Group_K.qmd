---
title: "ETF5500 Group Assignment"
format: pdf
author: Girika, Jyovika Aswale, Richa Anghan, Sia Chawla, Siddhi Ajit Jadhav
---

```{r, message=FALSE}
library(tidyverse)
library(zoo)
```


```{r}
market_df <- read.csv(here::here("data/Market.csv"))
sample_df <- read.csv(here::here("data/SampleK.csv"))
```

```{r, IDA results='hide', echo=FALSE}
colSums(is.na(sample_df))

range(sample_df$Date)

tibble(stock = names(sample_df)[-1]) %>%
  mutate(industry = substr(stock,1,1)) %>%
  count(industry)
```


## Biplot


```{r pca_setup, message=FALSE, warning=FALS}
# Make a numeric data matrix with all stock columns (drop Date)
stopifnot("Date" %in% names(sample_df))
X <- sample_df[setdiff(names(sample_df), "Date")]

# Make sure everything is numeric (silently convert if needed)
X <- X |> mutate(across(everything(), ~ suppressWarnings(as.numeric(.x))))

# If any column became all-NA, drop it (rare safety)
all_na_cols <- names(X)[sapply(X, function(v) all(is.na(v)))]
if (length(all_na_cols) > 0) X <- X[ , setdiff(names(X), all_na_cols), drop=FALSE]

# Run PCA on scaled data
pca <- prcomp(X, center = TRUE, scale. = TRUE)

```


```{r gg_biplot, message=FALSE, warning=FALSE}

### 3) Paste this **biplot** chunk right after the PCA chunk

# Build a clean biplot (PC1 vs PC2)
scores <- as_tibble(pca$x[, 1:2]); names(scores) <- c("PC1","PC2")
loads  <- as_tibble(pca$rotation[, 1:2], rownames = "id"); names(loads)[2:3] <- c("PC1","PC2")
loads$industry <- substr(loads$id, 1, 1)

# Scale arrows to fit nicely
rng_scores  <- max(abs(c(scores$PC1, scores$PC2)), na.rm = TRUE)
rng_loads   <- max(abs(c(loads$PC1, loads$PC2)),  na.rm = TRUE)
arrow_scale <- ifelse(rng_loads == 0, 1, 0.9 * rng_scores / rng_loads)

loads <- loads |>
  mutate(PC1_s = PC1 * arrow_scale,
         PC2_s = PC2 * arrow_scale,
         length = sqrt(PC1^2 + PC2^2))

# Label only the 15 longest arrows so itâ€™s not messy
label_ids <- loads |>
  arrange(desc(length)) |>
  slice_head(n = 20) |>
  pull(id)

ggplot() +
  geom_point(data = scores, aes(PC1, PC2), alpha = 0.35, size = 1) +
  geom_segment(data = loads,
               aes(x = 0, y = 0, xend = PC1_s, yend = PC2_s, colour = industry),
               linewidth = 0.35, alpha = 0.85) +
  geom_point(data = loads, aes(PC1_s, PC2_s, colour = industry), size = 0.7) +
  geom_label_repel(data = loads |> filter(id %in% label_ids),
                   aes(PC1_s, PC2_s, label = id, colour = industry),
                   size = 2.7, label.size = 0.15, max.overlaps = Inf, seed = 7) +
  labs(title = "PCA Biplot (PC1 vs PC2)",
       subtitle = "Dots = months (scores); Arrows = stocks (loadings). Top 15 labeled.",
       x = "PC1", y = "PC2", colour = "Industry") +
  theme_minimal()

```




















## Cleaning 
```{r, CLeaning}
sample_df <- sample_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))

market_df <- market_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))
  
```

## EDA

```{r, EDA }
stocks_long <- sample_df %>%
  pivot_longer(-Date, names_to = "stock", values_to = "ret") %>%
  mutate(industry = substr(stock,1,1),
         industry_name = recode(industry,
           B = "Mining",
           C = "Construction",
           D = "Manufacturing",
           E = "Transport & Utilities",
           F = "Wholesale Trade",
           G = "Retail Trade",
           H = "Finance/Insurance/RE",
           I = "Services"
         ))

industry_summary <- stocks_long %>%
  group_by(industry_name) %>%
  summarise(
    mean_return = mean(ret, na.rm = TRUE),
    sd_return   = sd(ret, na.rm = TRUE),
    .groups = "drop"
  )

ggplot(industry_summary, aes(x = reorder(industry_name, mean_return),
                             y = mean_return, fill = industry_name)) +
  geom_col() +
  coord_flip() +  
  labs(title = "Average Monthly Return by Industry",
       x = "Industry", y = "Mean Return") +
  theme_minimal() +
  theme(legend.position = "none")

sampleXmarket <- stocks_long %>%
  left_join(market_df, by = "Date")

industry_ts <- sampleXmarket %>%
  group_by(Date, industry_name) %>%
  summarise(
    avg_ret = mean(ret, na.rm = TRUE),
    MarketReturn = first(MarketReturn),  
    .groups = "drop"
  )

ggplot(industry_ts, aes(x = MarketReturn, y = avg_ret, color = industry_name)) +
  geom_point(alpha = 0.5) +
  geom_smooth() +
  facet_wrap(~ industry_name, scales = "free_y") +
  labs(
    title = "Industry Average Returns vs Market Return",
    x = "Market Return",
    y = "Industry Avg Return"
  ) +
  theme_minimal() +
  theme(legend.position = "none")
```



## References

Date formating using zoo in R. (2017, January). [Online post]. <https://stackoverflow.com/questions/41588737/date-formating-using-zoo-in-r?rq=3>
