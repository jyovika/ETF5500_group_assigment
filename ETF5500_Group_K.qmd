---
title: "ETF5500 Group Assignment"
format: pdf
author: Girika, Jyovika Aswale, Richa Anghan, Sia Chawla, Siddhi Ajit Jadhav
---

```{r, message=FALSE}
library(tidyverse)
library(zoo)
library(broom)
```


```{r}
market_df <- read.csv(here::here("data/Market.csv"))
sample_df <- read.csv(here::here("data/SampleK.csv"))
```

```{r, IDA_results='hide', echo=FALSE}
colSums(is.na(sample_df))

range(sample_df$Date)

tibble(stock = names(sample_df)[-1]) %>%
  mutate(industry = substr(stock,1,1)) %>%
  count(industry)
```

## Cleaning 
```{r, CLeaning}
sample_df <- sample_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))

market_df <- market_df %>%
  mutate(Date = as.yearmon(str_remove(Date, "Y"), format = "%Y M%m"))
  
```

## EDA

```{r, EDA }
stocks_long <- sample_df %>%
  pivot_longer(-Date, names_to = "stock", values_to = "ret") %>%
  mutate(industry = substr(stock,1,1),
         industry_name = recode(industry,
           B = "Mining",
           C = "Construction",
           D = "Manufacturing",
           E = "Transport & Utilities",
           F = "Wholesale Trade",
           G = "Retail Trade",
           H = "Finance/Insurance/RE",
           I = "Services"
         ))

industry_summary <- stocks_long %>%
  group_by(industry_name) %>%
  summarise(
    mean_return = mean(ret, na.rm = TRUE),
    sd_return   = sd(ret, na.rm = TRUE),
    .groups = "drop"
  )

ggplot(industry_summary, aes(x = reorder(industry_name, mean_return),
                             y = mean_return, fill = industry_name)) +
  geom_col() +
  coord_flip() +  
  labs(title = "Average Monthly Return by Industry",
       x = "Industry", y = "Mean Return") +
  theme_minimal() +
  theme(legend.position = "none")

sampleXmarket <- stocks_long %>%
  left_join(market_df, by = "Date")

industry_ts <- sampleXmarket %>%
  group_by(Date, industry_name) %>%
  summarise(
    avg_ret = mean(ret, na.rm = TRUE),
    MarketReturn = first(MarketReturn),  
    .groups = "drop"
  )

ggplot(industry_ts, aes(x = MarketReturn, y = avg_ret, color = industry_name)) +
  geom_point(alpha = 0.5) +
  geom_smooth() +
  facet_wrap(~ industry_name, scales = "fixed") +
  labs(
    title = "Industry Average Returns vs Market Return",
    x = "Market Return",
    y = "Industry Avg Return"
  ) +
  theme_minimal() +
  theme(legend.position = "none")
```

##PCA

```{r}
pca_out <- prcomp(sample_df[,-1], scale. = TRUE)
plot(pca_out, type = "line")

summary(pca_out)
```
## Question 1
```{r}
pc_scores <- as.data.frame(pca_out$x)   
pc1_scores <- pc_scores$PC1

pca_vs_market <- tibble(
  Date = sample_df$Date,  
  PC1 = pc1_scores) %>%
  left_join(market_df, by = "Date")

cor(pca_vs_market$PC1, pca_vs_market$MarketReturn, use = "pairwise.complete.obs")


ggplot(pca_vs_market, aes(x = MarketReturn, y = PC1)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "PC1 vs Market Return",
    x = "Market Return",
    y = "PC1 Score"
  ) +
  theme_minimal()



```


## Question 2
**so we do this first**
```{r}
fact_out <- factanal(sample_df[,-1], factors = 2, rotation = "varimax", scores = "none")

loadings_df <- as.data.frame(unclass(fact_out$loadings))
loadings_df$stock <- rownames(loadings_df)
loadings_df$industry <- substr(loadings_df$stock, 1, 1)

factor_scores <- as.data.frame(fact_out$scores)
factor_scores$Date <- sample_df$Date

industry_factor <- loadings_df %>%
  group_by(industry) %>%
  summarise(
    mean_F1 = mean(Factor1, na.rm = TRUE),
    mean_F2 = mean(Factor2, na.rm = TRUE)
  )

# Plot factor time series
ggplot(factor_scores, aes(x = Factor1, y = Factor2, label = Date)) +
  geom_text(size = 3) +
  labs(title = "Factor scores", x = "Factor1", y = "Factor2") +
  theme_minimal() +
  theme(text = element_text(size = 12))

ggplot(factor_scores, aes(x = Factor1, y = Factor2, color = as.numeric(Date))) +
  geom_point(size = 2, alpha = 0.6) +
  scale_color_viridis_c(option = "plasma") +
  labs(title = "Factor scores", x = "Factor1", y = "Factor2", color = "Time") +
  theme_minimal()
```
**then we show with 3 factors**
```{r}
fact_out <- factanal(sample_df[,-1], factors = 3, rotation = "varimax", scores = "regression")

loadings_df2 <- as.data.frame(unclass(fact_out_2$loadings))
loadings_df2$stock <- rownames(loadings_df2)
loadings_df2$industry <- substr(loadings_df2$stock, 1, 1)

industry_factor2 <- loadings_df2 %>%
  group_by(industry) %>%
  summarise(
    mean_F1 = mean(Factor1, na.rm = TRUE),
    mean_F2 = mean(Factor2, na.rm = TRUE),
    mean_F3 = mean(Factor3, na.rm = TRUE))


```



```{r}
df_plot <- loadings_df %>%
  transmute(
    variable = stock,
    industry = industry,
    fl1 = Factor1,
    fl2 = Factor2
  )

ggplot(df_plot, aes(x = fl1, y = fl2, label = variable)) +
  geom_segment(aes(xend = fl1, yend = fl2, x = 0, y = 0),
               arrow = arrow(length = unit(0.15, "cm"))) +
  geom_text(color = "red", nudge_y = -0.03, size = 3) +
  labs(x = "Factor 1 loading", y = "Factor 2 loading",
       title = "Factor loadings (stocks)") +
  coord_equal() +
  theme_minimal()
```

## plot for Q2

```{r}
 
industry_plot <- industry_factor %>%
  rename(fl1 = mean_F1, fl2 = mean_F2)

ggplot(industry_plot, aes(x = fl1, y = fl2, label = industry)) +
  geom_segment(aes(xend = fl1, yend = fl2, x = 0, y = 0),
               arrow = arrow(length = unit(0.15, "cm"))) +
  geom_text(color = "red", nudge_y = -0.02, size = 4) +
  labs(x = "Factor 1 loading (mean by industry)",
       y = "Factor 2 loading (mean by industry)",
       title = "Factor loadings (industry averages)") +
  coord_equal() +
  theme_minimal()

```

## Question 4 
```{r}

uniq <- fact_out$uniquenesses
fa_tbl <- tibble(StockID = names(uniq),
                 uniqueness = as.numeric(uniq),
                 Industry = substr(StockID, 1, 1))


fa_tbl %>%
  group_by(Industry) %>%
  summarise(
    mean_uniqueness = mean(uniqueness),
    median_uniqueness = median(uniqueness),
    .groups = "drop") %>% 
  arrange(mean_uniqueness)
```

## Question 5
```{r}

cor_with_mkt <- map_dbl(sample_df[,-1], ~ cor(.x, market_df$MarketReturn))
corr_tbl <- tibble(StockID = names(cor_with_mkt), cor_Market = cor_with_mkt)

load_mat <- as_tibble(pca_out$rotation, rownames = "StockID")
load_long <- load_mat |>
  mutate(Industry = substr(StockID, 1, 1)) |>
  select(StockID, Industry, PC1 = PC1, PC2 = PC2)

# average absolute loading by industry (who loads strongest?)
load_long |>
  group_by(Industry) |>
  summarise(
    mean_PC1 = mean(PC1),
    mean_abs_PC1 = mean(abs(PC1)),
    mean_PC2 = mean(PC2),
    mean_abs_PC2 = mean(abs(PC2)),
    .groups = "drop"
) |> arrange(desc(mean_abs_PC1))
pick_tbl <- load_long |>
  select(StockID, Industry, PC1) |>
  inner_join(corr_tbl, by = "StockID") |>
  mutate(abs_PC1 = abs(PC1)) |>
  arrange(desc(abs_PC1), desc(cor_Market))

head(pick_tbl, 5)
```



## References

Date formating using zoo in R. (2017, January). [Online post]. <https://stackoverflow.com/questions/41588737/date-formating-using-zoo-in-r?rq=3>
